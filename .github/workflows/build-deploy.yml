# name: Build and Deploy Code 

# on: [push, pull_request]

# jobs:
#   job1:
#     environment:
#       name: testing 
#     env:
#       DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}} 
#       DATABASE_PORT: ${{secrets.DATABASE_PORT}}
#       DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}} 
#       DATABASE_NAME: ${{secrets.DATABASE_NAME}} 
#       DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}} 
#       SECRET_KEY: ${{secrets.SECRET_KEY}}
#       ALGORITHM: ${{secrets.ALGORITHM}} 
#       ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}  

#     services:
#       postgres:
#         image: postgres
#         env:
#           POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
#           POSTGRES_DB: ${{secrets.DATABASE_NAME}}_test 
#         ports:
#           - 5432:5432
#         options: >-
#           --health-cmd pg_isready
#           --health-interval 10s
#           --health-timeout 5s
#           --health-retries 5

#     runs-on: ubuntu-latest 
#     steps:
#       - name: pulling git repo 
#         uses: actions/checkout@v2 
#       - name: Install python version 3.13 
#         uses: actions/setup-python@v2
#         with:
#           python-version: "3.13"
#       - name: update pip 
#         run: python -m pip install --upgrade pip 
#       - name: install all dependencies 
#         run: pip install -r requirements.txt 
#       - name: test with pytest 
#         run: |
#           pip install pytest 
#           pytest
     

name: Build and Deploy Code

on: [push, pull_request]

jobs:
  job1:
    environment:
      name: testing
    env:
      DATABASE_HOSTNAME: ${{ secrets.DATABASE_HOSTNAME }}
      DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
      DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      ALGORITHM: ${{ secrets.ALGORITHM }}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DATABASE_NAME }}_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.11
        uses: actions/setup-python@v2
        with:
          python-version: "3.11"

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h localhost -p 5432 -U postgres; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done

      - name: Run tests with pytest
        run: pytest